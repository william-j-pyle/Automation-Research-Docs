substitutions:
  #Device Information
  device_name: 'nspanel-craftroom'
  device_description: 'Sonoff NSPanel Test'
  #Display Level Information
  hmi_project: 'nspanel-quicktest-nextion'
  tft_location: 'http://192.168.86.47:8123/local/nspanel/'
  #ESPHome
  ota_password: '36215290193febd10708246414338486'
  #HomeAssistant
  api_encryption_key: 'tbhrlha8hK0xe1Rvd75SUTVg191k5PN8HCsfyh1gBJY='
  timezone: 'US/Central'
  #Defaults
  def_brightness: 100
  def_dim: 30
  def_temp_target_room: 70
  def_temp_slider_room: 0
  def_temp_target_floor: 70
  def_temp_slider_floor: 0

external_components:
  - source: github://pr#2956
    components: [nextion]
    refresh: 1h
 
esphome:
  name: $device_name
  comment: $device_description

esp32:
  board: esp32dev 

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none
  fast_connect: true
  ap:
    ssid: $device_name
    password: !secret fallback_password

captive_portal:

ota:
  password: $ota_password
  #safe_mode: true
  #reboot_timeout: 3min
  #num_attempts: 3

logger:
  level: DEBUG
  logs:
    sensor: WARN
    resistance: WARN
    text_sensor: WARN
    ntc: WARN

output:
  - platform: ledc
    id: rtttlOutput
    pin:
      number: 21

rtttl:
  id: buzzer
  output: rtttlOutput

uart:
  id: nxtUart
  tx_pin: 16
  rx_pin: 17
  baud_rate: 115200

globals:
##### Save Room Target Temp #####
  - id: climate_target_temp_room_global
    type: float
    restore_value: true
    initial_value: $def_temp_target_room

##### Save Room Thermostat PIC Position #####
  - id: climate_slider_room_global
    type: int
    restore_value: true
    initial_value: $def_temp_slider_room

##### Save Floor Target Temp #####
  - id: climate_target_temp_floor_global
    type: float
    restore_value: true
    initial_value: $def_temp_target_floor

##### Save Floor Thermostat PIC Position #####
  - id: climate_slider_floor_global
    type: int
    restore_value: true
    initial_value: $def_temp_slider_floor

##### Save Display Brightness for NSPanel reboot #####
  - id: display_brightness_global
    type: int
    restore_value: true
    initial_value: $def_brightness

##### Save Display DIM Brightness for NSPanel reboot
  - id: display_dim_brightness_global
    type: int
    restore_value: true
    initial_value: $def_dim

##### Save Display Brightness for NSPanel reboot
  - id: display_current_brightness_global
    type: int
    restore_value: true
    initial_value: $def_brightness

api:
  services:
    - service: play_rtttl
      variables:
        song_str: string
      then:
        - rtttl.play:
            rtttl: lambda 'return song_str;'

    - service: upload_tft
      then:
        - lambda: 'id(disp1)->upload_tft();'
            
    - service: send_command_printf
      variables:
        cmd: string
      then:
        - lambda: 'id(disp1).send_command_printf("%s", cmd.c_str());'

    - service: send_command_text_printf
      variables:
        component: string
        message: string
      then:
        - wait_until:
              switch.is_on: nextion_init
        - lambda: 'id(disp1).set_component_text_printf(component.c_str(), "%s", message.c_str());'

    - service: send_command_value
      variables:
        component: string
        message: int
      then:
        - wait_until:
              switch.is_on: nextion_init
        - lambda: 'id(disp1).set_component_value(component.c_str(), message);'

    - service: screen_wakeup
      then:
        - lambda: |-
            id(nxtDisplay).goto_page("$device_home_page_name");

    - service: screen_sleep
      then:
        - lambda: |-
            id(nxtDisplay).goto_page("$device_screensaver_page_name");

time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: $timezone
    on_time:
      - seconds: 0
        minutes: '/1'
        then:
          - wait_until:
              switch.is_on: nextion_init
          - lambda: |-
              auto time_text = id(homeassistant_time).now().strftime("%I:%M");
              auto date_text = id(homeassistant_time).now().strftime("%B %d %Y");
              id(nxtDisplay).set_component_text("${device_home_page_name}.time", time_text.c_str());
              id(nxtDisplay).set_component_text("${device_home_page_name}.date", date_text.c_str());
    on_time_sync:
        then:
          - wait_until:
              switch.is_on: nextion_init
          - lambda: |-
              auto time_text = id(homeassistant_time).now().strftime("%I:%M");
              auto date_text = id(homeassistant_time).now().strftime("%B %d %Y");
              id(nxtDisplay).set_component_text("${device_home_page_name}.time", time_text.c_str());
              id(nxtDisplay).set_component_text("${device_home_page_name}.date", date_text.c_str());
 
button:
  - platform: restart
    name: NSPanel Restart
    id: nspanel_test_restart
    device_class: restart
    entity_category: diagnostic
    icon: mdi:restart-alert

  - platform: template
    name: Upload TFT
    id: nspanel_test_upload_tft
    entity_category: config
    icon: mdi:briefcase-upload-outline
    on_press:
      - lambda: 'id(nxtDisplay).upload_tft();'

  - platform: template
    name: Test Buzzer
    id: nspanel_test_buzzer
    icon: mdi:bullhorn-outline
    entity_category: diagnostic
    on_press:
      - rtttl.play: $device_notification_alert

  - platform: template
    name: WakeUp
    id: nspanel_test_wakeup
    entity_category: diagnostic
    on_press:
      - lambda: |-
          id(nxtDisplay).goto_page("$device_home_page_name");

  - platform: template
    name: WakeUp
    id: nspanel_test_wakeup
    entity_category: diagnostic
    on_press:
      - lambda: |-
          id(nxtDisplay).goto_page("$device_screensaver_name");

binary_sensor:

  # Left button below the display
  - platform: gpio
    name: Left Button
    id: nspanel_test_button_left
    pin:
      number: 14
      inverted: true
    on_click:
      - switch.toggle: relay_1

  # Right button below the display
  - platform: gpio
    name: Right Button
    id: nspanel_test_button_right
    pin:
      number: 27
      inverted: true
    on_click:
      - switch.toggle: relay_2


sensor:

##### INTERNAL TEMPERATUE SENSOR, ADC VALUE #####
  - platform: adc
    id: ntc_source
    pin: 38
    update_interval: 10s
    attenuation: 11db

##### INTERNAL TEMPERATUE SENSOR, adc reading converted to resistance (calculation)#####
  - platform: resistance
    id: resistance_sensor
    sensor: ntc_source
    configuration: DOWNSTREAM
    resistor: 11.2kOhm

##### INTERNAL TEMPERATUE SENSOR, resistance to temperature (calculation) #####
  - platform: ntc
    name: $device_name Temperature
    id: temp_nspanel
    sensor: resistance_sensor
    calibration:
      b_constant: 3950
      reference_temperature: 25°C
      reference_resistance: 10kOhm
    on_value:
      then:
        - wait_until:
            switch.is_on: nextion_init
        - lambda: id(disp1).set_component_text_printf("home.a03", "%.1f°", id(temp_nspanel).state); # onboard temp (thermostat temp) to home page.
        - lambda: id(disp1).set_component_text_printf("thermostat.a04", "%.1f", id(temp_nspanel).state);
 
##### TEMPERATURE Outdoor FROM HA #####
  - platform: homeassistant
    id: temp_outdoor
    entity_id: $ha_outdoor_temp
    on_value:
      then:
        - wait_until:
            switch.is_on: nextion_init
        - lambda: id(disp1).set_component_text_printf("home.a06", "%.0f°", id(temp_outdoor).state);
        - lambda: id(disp1).set_component_text_printf("thermostat.a07", "%.0f°", id(temp_outdoor).state);

##### HUMIDITY Indoor FROM HA #####
  - platform: homeassistant
    id: humidity
    entity_id: $ha_humidity
    on_value:
      then:
        - wait_until:
            switch.is_on: nextion_init
        - lambda: id(disp1).set_component_text_printf("home.a04", "%.0f°", id(humidity).state);



text_sensor:

##### ESPhome version used to compile the app #####
  - platform: version
    name: $device_name ESPhome Version

##### SUN SENSOR FROM HA #####
  - platform: homeassistant
    id: sun_sun
    entity_id: sun.sun

switch:

  - platform: nextion
    name: Disable dim-down
    id: nspanel_test_dim_disable
    variable_name: disDim
    entity_category: config
    update_interval: 2s

  - platform: nextion
    name: Disable Screensaver
    id: nspanel_test_sleep_disable
    variable_name: disSleep
    entity_category: config
    update_interval: 2s

  - platform: gpio
    name: Left Relay
    id: relay_1
    pin:
      number: 22
    on_turn_on:
        - lambda: |-
            if (id(nxtDisplay_current_page).state==0) {
              id(nxtDisplay).send_command_printf("sec=%i", 0);
            } else {
              id(nxtDisplay).goto_page("$device_home_page_name");
            }        
            id(nxtDisplay).set_component_value("home.relay_l", 1);
    on_turn_off:
        - lambda: |-
            if (id(nxtDisplay_current_page).state==0) {
              id(nxtDisplay).send_command_printf("sec=%i", 0);
            } else {
              id(nxtDisplay).goto_page("$device_home_page_name");
            }        
            id(nxtDisplay).set_component_value("home.relay_l", 0);

  - platform: gpio
    name: Right Relay
    id: relay_2
    pin:
      number: 19
    on_turn_on:
        - lambda: |-
            if (id(nxtDisplay_current_page).state==0) {
              id(nxtDisplay).send_command_printf("sec=%i", 0);
            } else {
              id(nxtDisplay).goto_page("$device_home_page_name");
            }        
            id(nxtDisplay).set_component_value("home.relay_r", 1);
    on_turn_off:
        - lambda: |-
            if (id(nxtDisplay_current_page).state==0) {
              id(nxtDisplay).send_command_printf("sec=%i", 0);
            } else {
              id(nxtDisplay).goto_page("$device_home_page_name");
            }        
            id(nxtDisplay).set_component_value("home.relay_r", 0);

  # Pin 4 high to power display
  - platform: gpio
    name: Screen Power
    id: screen_power
    entity_category: config
    pin:
      number: 4
      inverted: true
    restore_mode: ALWAYS_ON

number:

##### SCREEN BRIGHTNESS #####
  - platform: template
    name: $device_name Display Brightness
    id: display_brightness
    entity_category: config
    unit_of_measurement: '%'
    min_value: 1
    max_value: 100
    step: 1
    restore_value: true
    optimistic: true
    set_action:
      then:
        - lambda: 'id(disp1).set_backlight_brightness(x/100);'
        - lambda: 'id(disp1).send_command_printf("home.brightness.val=%i", int(x));'
        - globals.set:
            id: display_brightness_global
            value: !lambda 'return int(x);'

##### SCREEN BRIGHTNESS DIMMED DOWN #####
  - platform: template
    name: $device_name Display Brightness Dimdown
    id: display_dim_brightness
    entity_category: config
    unit_of_measurement: '%'
    min_value: 1
    max_value: 100
    step: 1
    restore_value: true
    optimistic: true
    set_action:
      then:
        - lambda: 'id(disp1).send_command_printf("home.brightdd.val=%i", int(x));'
        - globals.set:
            id: display_dim_brightness_global
            value: !lambda 'return int(x);'




display:
  - platform: nextion
    id: nxtDisplay
    uart_id: nxtUart
    tft_url: ${tft_location}${hmi_project}.tft
    brightness: 100%
    on_setup:
      then:
        - lambda: id(nxtDisplay).goto_page("$device_connecting_page_name");
        - wait_until:
            api.connected
        - delay: 0.5s
        - rtttl.play: "two short:d=4,o=5,b=100:16e6,16e6"
        - delay: 0.5s
        - switch.template.publish:
            id: nextion_init
            state: on
        - lambda: id(nxtDisplay).goto_page("$device_connecting_page_name");
        - delay: 2s

